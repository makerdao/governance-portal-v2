name: E2E Tests

on:
  push:
    branches:
      - master
      - develop
      - ci-with-spock
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:    
      - master
      - develop
jobs:
  ui-chrome-tests:
    runs-on: ubuntu-latest
    container: makerdaodux/cypress-dapptools-node-14:latest
    strategy:
      fail-fast: false
    env:
      INFURA_KEY: ${{ secrets.INFURA_KEY }}
      MONGODB_COMMENTS_DB: ${{ secrets.MONGODB_COMMENTS_DB }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOERLI_FORK_API_KEY: ${{ secrets.GOERLI_FORK_API_KEY }}
      ETHERSCAN_KEY: ${{ secrets.ETHERSCAN_KEY }}
      POCKET_KEY: ${{ secrets.POCKET_KEY }}
      ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      USE_CACHE: true
      ALCHEMY_GOERLI_API_KEY_HH: ${{ secrets.ALCHEMY_GOERLI_API_KEY_HH }}
      NEXT_PUBLIC_ALCHEMY_ARBITRUM_TESTNET_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_ARBITRUM_TESTNET_KEY }}
      NEXT_PUBLIC_ALCHEMY_ARBITRUM_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_ARBITRUM_KEY }}
          
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install node packages
        run: yarn
        
      - name: start testchains
        run: yarn hardhat:gasless:config &
      
      - name: docker compose
        run: |
          LATEST_VERSION=v2.12.2
          sudo curl -L "https://github.com/docker/compose/releases/download/$LATEST_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo docker-compose up &
      

      ## Download prebuilt next data
      # - name: Download the build folders
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: build

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          # we have already installed all dependencies above
          # use (install: false) if you want to do parallel jobs.
          install: false
          start: yarn start:ci
          ## command: yarn run e2e:ci
          wait-on: 'http://localhost:3000, http://localhost:3001, http://localhost:8545, http://localhost:8546'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: false
          group: 'UI - Chrome'
          spec: cypress/integration/**
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
